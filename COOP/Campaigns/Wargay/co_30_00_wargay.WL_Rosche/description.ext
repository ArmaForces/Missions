#include "script_component.hpp"
#include "gui\gui_init.hpp"

cba_settings_hasSettingsFile = 1;

/* Respawn stuff */
respawn = 3;
respawnDelay = 1e10;
respawnTemplates[] = {"afm_respawn_default", "Counter"};
// Jeśli misja nie przewiduje standardowego respawnu na czas to można usunąć "Counter".
// Tj. dla misji permadeath i z własnym respawnem np. po wykonaniu zadania.
// Dla kompatybilności z modułem obserwatora:
respawnTemplatesVirtual[] = {"Spectator"};

disableChannels[] = {1, 2, 3, 4, 5};

/* Mission description and stuff */
author = "3Mydlo3";
onLoadIntro = CSTRING(Mission_ShortDescription);
briefingName = CSTRING(DisplayName);
onLoadMission = CSTRING(Mission_ShortDescription);
onLoadName = CSTRING(Mission_Title);

class Header {
    gameType = Coop;
    minPlayers = 20;
    maxPlayers = 51;
};

/* Other stuff */
disabledAI = true;

// Bibloteka funkcji
class CfgFunctions {
    #include "AF_functions.hpp"
    class MWG
    {
        tag = QUOTE(ADDON);
        class Common
        {
            class getGroupVehicles {};
            class isEngineer {};
        };
        class Damage
        {
            class applyDamage {};
            class calculateAndApplyDamage {};
            class getHitDir {};
            class healDamage {};
            class heatDamage {};
            class heDamage {};
            class keDamage {};
        };
        class Debug
        {
            class drawHitDebug {};
            class initDebug { preInit = 1; };
        };
        class Deployment
        {
            class deployVehicle {};
        };
        class EventHandlers
        {
            class draw3D {};
            class fired {};
            class handleDamage {};
            class handleDamageMan {};
            class hitPart {};
            class knowsAboutChanged {};
        };
        class Experience
        {
            class addExperienceForKill {};
        };
        class HUD
        {
            class initHitpointsDisplay {};
            class updateHitpointsDisplay {};
        };
        class KeyHandlers
        {
            class keyUnitInfo {};
        };
        class Icons
        {
            class createVehicleInfoForNonConfiguredVehicle {};
            class currentHpString {};
            class drawIcon {};
            class getAmmoInfo {};
            class getIconPath {};
            class getVehicleDisplayName {};
            class getVehicleInfo {};
            class isReconVehicle {};
            class shouldStillBeVisible {};
            class showUnitInfo {};
            class visibilityCheckLoop {};
        };
        class Init
        {
            class manInit {};
            class vehicleInit {};
            class vehicleSpawnerInit {};
        };
        class Markers
        {
            class createVehicleMarker {};
            class enemyMarkersLoop {};
            class removeVehicleMarker {};
        };
        class Rearm
        {
            class addRearmAction {};
            class canRearm {};
            class completeRearm {};
            class interruptedRearm {};
            class rearmVehicle {};
        };
        class Refuel
        {
            class addRefuelAction {};
            class canRefuel {};
            class completeRefuel {};
            class interruptedRefuel {};
            class progressRefuel {};
            class refuelVehicle {};
            class startRefuel {};
        };
        class Repair
        {
            class addRepairAction {};
            class canRepair {};
            class completeRepair {};
            class interruptedRepair {};
            class progressRepair {};
            class startRepair {};
        };
        class Settings
        {
            class initClientSettings { preInit = 1; };
            class initGlobalSettings { preInit = 1; };
        };
        class Stats
        {
            class getPlayerStats {};
            class loadAllStats {};
            class loadPlayerStats {};
            class playerKilled {};
            class saveAllStats {};
            class showPlayerStats {};
        };
    };
};

class CfgSounds {
    class MDL_Wargay_Alarm
    {
        name = "Wargay alarm";
        // BUG: Possible bug with path not existing on clients (use getMissionPath)
        sound[] = { "sounds\wargay-alarm.ogg", 4, 1 };
        titles[] = { 0, CSTRING(DamageReceived) };
    };
};

// Ustawienia CBA muszą być dodane poprzez CBA XEH PreInit, w przeciwnym wypadku nie będą dostępne w edytorze
class Extended_PreInit_EventHandlers {

};

class Extended_DisplayLoad_EventHandlers {
    class RscUnitInfo {
        MDL_Wargay = QUOTE(call FUNC(initHitpointsDisplay));
    };
};

// https://github.com/acemod/ACEX/tree/master/addons/killtracker
class CfgDebriefingSections {
    class acex_killTracker {
        title = "Acex Killed Events";
        variable = "acex_killTracker_outputText";
    };
};

// For AF - Mods Tasks Framework
// #include "CfgTasks.hpp"
// #include "CfgDebriefing.hpp"
#include "CfgWargay.hpp"
